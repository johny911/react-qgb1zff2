// src/service-worker.js
import { precacheAndRoute } from 'workbox-precaching'
import { registerRoute } from 'workbox-routing'
import { NetworkFirst, StaleWhileRevalidate } from 'workbox-strategies'

// Precache all the assets generated by CRA.
// __WB_MANIFEST is injected at build time by workbox-precaching.
precacheAndRoute(self.__WB_MANIFEST || [])

// ✅ Allow the waiting SW to activate immediately when told by the page.
self.addEventListener('message', (event) => {
  if (!event?.data) return
  if (event.data.type === 'SKIP_WAITING') {
    self.skipWaiting()
  }
})

// ✅ Take control of all clients as soon as this SW activates.
self.addEventListener('activate', (event) => {
  event.waitUntil(self.clients.claim())
})

/**
 * Routing
 */

// App shell for navigation—network first:
registerRoute(
  ({ request }) => request.mode === 'navigate',
  new NetworkFirst({
    cacheName: 'pages',
  })
)

// Static assets (CSS/JS/images)—stale while revalidate:
registerRoute(
  ({ request }) => ['style', 'script', 'image'].includes(request.destination),
  new StaleWhileRevalidate({
    cacheName: 'assets',
  })
)